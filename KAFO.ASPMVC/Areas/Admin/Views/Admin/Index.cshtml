@model Kafo.ASPMVC.Models.HomeViewModel
@{
    ViewData["Title"] = "لوحة التحكم";
}

<div class="container-fluid">
    <!-- Statistics Cards -->
    @Html.Partial("_StatisticsCards", Model)

    <!-- Management Sections -->
    @Html.Partial("_SellersManagement", Model)

    <div class="card mb-4" id="categories-management">
        @Html.Partial("_CategoriesManagement", Model)
    </div>

    <!-- Products Management -->
    @Html.Partial("_ProductsManagement", Model)

    <!-- Admins Management -->
    @Html.Partial("_AdminsManagement", Model)

    <!-- Placeholder for Profile Management -->
    @Html.Partial("_ProfileManagement", Model)

    <!-- Reports Management Section -->
    @Html.Partial("_ReportsManagement", Model)

</div>

<!-- Add Product Modal -->
@Html.Partial("_AddProductModal")

<!-- Add Seller Modal -->
@Html.Partial("_AddSellerModal")

<!-- Add Admin Modal -->
@Html.Partial("_AddAdminModal")

<!-- Add Category Modal -->
@Html.Partial("_AddCategoryModal")

<!-- Edit Product Modal -->
@Html.Partial("_EditProductModal")

<!-- Edit Seller Modal -->
@Html.Partial("_EditSellerModal")

<!-- Edit Category Modal -->
@Html.Partial("_EditCategoryModal")

<!-- Edit Admin Modal -->
@Html.Partial("_EditAdminModal")

<!-- Delete Confirmation Modals -->
@Html.Partial("_DeleteProductModal")

@Html.Partial("_DeleteSellerModal")

<!-- Delete Category Modal -->
@Html.Partial("_DeleteCategoryModal")

<!-- Delete Admin Modal -->
@Html.Partial("_DeleteAdminModal")

<!-- Report Actions Template -->
@Html.Partial("_ReportActionsTemplate")

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <script>
        function editSeller(id) { alert('تعديل البائع رقم ' + id); }
        function deleteSeller(id) { if (confirm('هل أنت متأكد من حذف هذا البائع؟')) { alert('حذف البائع رقم ' + id); } }
        function editCategory(id) { alert('تعديل الفئة رقم ' + id); }
        function deleteCategory(id) { if (confirm('هل أنت متأكد من حذف هذه الفئة؟')) { alert('حذف الفئة رقم ' + id); } }
        function editProduct(id) { alert('تعديل المنتج رقم ' + id); }
        function deleteProduct(id) { if (confirm('هل أنت متأكد من حذف هذا المنتج؟')) { alert('حذف المنتج رقم ' + id); } }
        function editAdmin(id) { alert('تعديل المسؤول رقم ' + id); }
        function deleteAdmin(id) { if (confirm('هل أنت متأكد من حذف هذا المسؤول؟')) { alert('حذف المسؤول رقم ' + id); } }

        function saveProduct() {
            const form = document.getElementById('addProductForm');
            const formData = new FormData(form);
            // In a real application, send this data to your API.
            alert('تم حفظ المنتج بنجاح');
            form.reset();
            $('#addProductModal').modal('hide');
        }

        function saveSeller() {
            const form = document.getElementById('addSellerForm');
            const formData = new FormData(form);
            // In a real application, send this data to your API.
            alert('تم حفظ البائع بنجاح');
            form.reset();
            $('#addSellerModal').modal('hide');
        }

        function saveAdmin() {
            const form = document.getElementById('addAdminForm');
            const formData = new FormData(form);
            // In a real application, send this data to your API.
            alert('تم حفظ المسؤول بنجاح');
            form.reset();
            $('#addAdminModal').modal('hide');
        }

        function saveCategory() {
            const form = document.getElementById('addCategoryForm');
            const formData = new FormData(form);
            // In a real application, send this data to your API.
            alert('تم حفظ الفئة بنجاح');
            form.reset();
            $('#addCategoryModal').modal('hide');
        }

        let currentReportType = '';

        $('.report-type-btn').on('click', function() {
            currentReportType = $(this).data('report-type');
            const reportTitleElement = document.getElementById('report-title');
            const reportDetailsSection = document.getElementById('report-details-section');

            $('.report-type-btn').removeClass('active');
            $(this).addClass('active');

            switch (currentReportType) {
                case 'profit':
                    reportTitleElement.innerText = 'تقرير إجمالي الأرباح';
                    break;
                case 'sales':
                    reportTitleElement.innerText = 'تقرير إجمالي المبيعات';
                    break;
                case 'most_sold':
                    reportTitleElement.innerText = 'تقرير المنتج الأكثر مبيعًا';
                    break;
                case 'most_profitable_seller':
                    reportTitleElement.innerText = 'تقرير البائع الأكثر ربحاً';
                    break;
                case 'most_profitable_product':
                    reportTitleElement.innerText = 'تقرير المنتج الأكثر ربحاً';
                    break;
                case 'total_payments':
                    reportTitleElement.innerText = 'تقرير عدد المدفوعات الكلي';
                    break;
                case 'sold_products':
                    reportTitleElement.innerText = 'تقرير المنتجات المباعة';
                    break;
            }
            reportDetailsSection.style.display = 'block';
            document.getElementById('report-results').innerHTML = '<p class="text-muted">الرجاء تحديد نطاق تاريخ لعرض التقرير.</p>';
        });

        function generateReport() {
            const startDate = document.getElementById('reportStartDate').value;
            const endDate = document.getElementById('reportEndDate').value;
            const reportResultsDiv = document.getElementById('report-results');

            if (startDate && endDate) {
                let reportDataHtml = `
                    <div class="report-content">
                        <div class="report-header mb-4">
                            <h4 class="text-center mb-3">${document.getElementById('report-title').innerText}</h4>
                            <p class="text-center text-muted">التقرير من <strong>${startDate}</strong> إلى <strong>${endDate}</strong></p>
                        </div>`;

                if (currentReportType === 'profit') {
                    const profit = (Math.random() * 5000 + 1000).toFixed(2);
                    reportDataHtml += `
                        <div class="report-body">
                            <div class="alert alert-success">
                                <h5 class="mb-0">إجمالي الأرباح للفترة: <strong>${profit} ريال</strong></h5>
                            </div>
                        </div>`;
                } else if (currentReportType === 'sales') {
                    const sales = (Math.random() * 10000 + 2000).toFixed(2);
                    reportDataHtml += `
                        <div class="report-body">
                            <div class="alert alert-info">
                                <h5 class="mb-0">إجمالي المبيعات للفترة: <strong>${sales} ريال</strong></h5>
                            </div>
                        </div>`;
                } else if (currentReportType === 'most_sold') {
                    const products = [
                        { name: "منتج أ", quantity: Math.floor(Math.random() * 100) + 10 },
                        { name: "منتج ب", quantity: Math.floor(Math.random() * 100) + 10 },
                        { name: "منتج ج", quantity: Math.floor(Math.random() * 100) + 10 }
                    ];
                    products.sort((a, b) => b.quantity - a.quantity);

                    reportDataHtml += `
                        <div class="report-body">
                            <div class="table-responsive">
                                <table class="table table-bordered table-striped mt-3">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>المنتج</th>
                                            <th>الكمية المباعة</th>
                                        </tr>
                                    </thead>
                                    <tbody>`;
                    products.forEach(p => {
                        reportDataHtml += `
                                        <tr>
                                            <td>${p.name}</td>
                                            <td>${p.quantity}</td>
                                        </tr>`;
                    });
                    reportDataHtml += `
                                    </tbody>
                                </table>
                            </div>
                        </div>`;
                } else if (currentReportType === 'most_profitable_seller') {
                    const sellers = [
                        { name: "البائع أ", profit: (Math.random() * 1000 + 500).toFixed(2) },
                        { name: "البائع ب", profit: (Math.random() * 1000 + 500).toFixed(2) },
                        { name: "البائع ج", profit: (Math.random() * 1000 + 500).toFixed(2) }
                    ];
                    sellers.sort((a, b) => b.profit - a.profit);

                    reportDataHtml += `
                        <div class="report-body">
                            <div class="table-responsive">
                                <table class="table table-bordered table-striped mt-3">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>البائع</th>
                                            <th>إجمالي الربح</th>
                                        </tr>
                                    </thead>
                                    <tbody>`;
                    sellers.forEach(s => {
                        reportDataHtml += `
                                        <tr>
                                            <td>${s.name}</td>
                                            <td>${s.profit} ريال</td>
                                        </tr>`;
                    });
                    reportDataHtml += `
                                    </tbody>
                                </table>
                            </div>
                        </div>`;
                } else if (currentReportType === 'most_profitable_product') {
                    const products = [
                        { name: "منتج X", profit: (Math.random() * 500 + 100).toFixed(2) },
                        { name: "منتج Y", profit: (Math.random() * 500 + 100).toFixed(2) },
                        { name: "منتج Z", profit: (Math.random() * 500 + 100).toFixed(2) }
                    ];
                    products.sort((a, b) => b.profit - a.profit);

                    reportDataHtml += `
                        <div class="report-body">
                            <div class="table-responsive">
                                <table class="table table-bordered table-striped mt-3">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>المنتج</th>
                                            <th>إجمالي الربح</th>
                                        </tr>
                                    </thead>
                                    <tbody>`;
                    products.forEach(p => {
                        reportDataHtml += `
                                        <tr>
                                            <td>${p.name}</td>
                                            <td>${p.profit} ريال</td>
                                        </tr>`;
                    });
                    reportDataHtml += `
                                    </tbody>
                                </table>
                            </div>
                        </div>`;
                } else if (currentReportType === 'total_payments') {
                    const paymentCount = Math.floor(Math.random() * 1000 + 100);
                    reportDataHtml += `
                        <div class="report-body">
                            <div class="alert alert-primary">
                                <h5 class="mb-0">عدد المدفوعات الكلي للفترة: <strong>${paymentCount} دفعة</strong></h5>
                            </div>
                        </div>`;
                } else if (currentReportType === 'sold_products') {
                    const soldProducts = [
                        { id: 101, name: "لابتوب ديل", price: 2500, quantity: 1, date: "2024-05-20" },
                        { id: 102, name: "هاتف سامسونج", price: 1800, quantity: 1, date: "2024-05-21" },
                        { id: 103, name: "سماعات بلوتوث", price: 250, quantity: 1, date: "2024-05-21" },
                        { id: 104, name: "شاحن سريع", price: 120, quantity: 1, date: "2024-05-22" }
                    ];
                    reportDataHtml += `
                        <div class="report-body">
                            <div class="table-responsive">
                                <table class="table table-bordered table-striped mt-3">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>رقم المنتج</th>
                                            <th>اسم المنتج</th>
                                            <th>السعر</th>
                                            <th>الكمية المباعة</th>
                                            <th>تاريخ البيع</th>
                                        </tr>
                                    </thead>
                                    <tbody>`;
                    soldProducts.forEach(p => {
                        reportDataHtml += `
                                        <tr>
                                            <td>${p.id}</td>
                                            <td>${p.name}</td>
                                            <td>${p.price} ريال</td>
                                            <td>${p.quantity}</td>
                                            <td>${p.date}</td>
                                        </tr>`;
                    });
                    reportDataHtml += `
                                    </tbody>
                                </table>
                            </div>
                        </div>`;
                }

                reportDataHtml += `</div>`;

                // Add report actions
                const reportActionsTemplate = document.getElementById('report-actions-template');
                const reportActions = reportActionsTemplate.content.cloneNode(true);

                reportResultsDiv.innerHTML = reportDataHtml;
                reportResultsDiv.appendChild(reportActions);

                alert(`جارٍ إنشاء تقرير ${currentReportType} من ${startDate} إلى ${endDate}`);
            } else {
                alert('الرجاء تحديد تاريخي البدء والانتهاء.');
            }
        }

        function downloadReportAsPDF() {
            const reportContent = document.querySelector('.report-content');
            const reportTitle = document.getElementById('report-title').innerText;

            const opt = {
                margin: 1,
                filename: `${reportTitle}-${new Date().toISOString().split('T')[0]}.pdf`,
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' }
            };

            html2pdf().set(opt).from(reportContent).save();
        }

        // The printReport() function has been removed to resolve persistent JavaScript syntax errors.
        // If you need to re-implement print functionality, please let me know.
    </script>
}
